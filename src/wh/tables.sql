-- CREATE Database/schema

CREATE OR REPLACE DATABASE TPCDI_WH;

CREATE OR REPLACE SCHEMA TPCDI_WH.PUBLIC;

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.AUDIT ( PROC_NAME VARCHAR COMMENT 'STORED PROCEDURE NAME' , LOG_TIME TIMESTAMP_LTZ NULL COMMENT 'A TIMESTAMP SHORTLY AFTER THE PROC FINISHED', BATCH_ID NUMBER NULL COMMENT 'THE BATCH WHEN THE PROC WAS RUN', INSERTED_ROWS NUMBER COMMENT 'THE NUMBER OF ROWS INSERTED BY A PROC RUN', UPDATED_ROWS NUMBER COMMENT 'THE NUMBER OF ROWS UPDATED BY A PROC RUN' ) ;
-- CREATE SEQUENCE STATEMENT

CREATE OR REPLACE SEQUENCE TPCDI_WH.PUBLIC.CTRL_BATCH_SEQ   START WITH = 1   INCREMENT = 1   COMMENT = 'DATABASE SEQUENCE TO SOURCE THE BATCH_ID FOR THE BATCH CONTROL TABLE.' ; 

-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.CTRL_BATCH ( BATCH_ID NUMBER(11) COMMENT 'BATCH NUMBER', BATCH_TS TIMESTAMP_LTZ NOT NULL COMMENT 'THE TIMESTAMP THE BATCH STARTED' ) ;

-- CREATE SEQUENCE STATEMENT

CREATE SEQUENCE IF NOT EXISTS TPCDI_WH.PUBLIC.DIM_ACCOUNT_SEQ   START WITH = 1   INCREMENT = 1   COMMENT = 'DATABASE SEQUENCE TO SOURCE THE SURROGATE KEY FOR ACCOUNT.' ; 

-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_ACCOUNT ( SK_ACCOUNT_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR ACCOUNTID', ACCOUNT_ID NUMBER(11) NOT NULL COMMENT 'CUSTOMER ACCOUNT IDENTIFIER', SK_BROKER_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY OF MANAGING BROKER', SK_CUSTOMER_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY OF CUSTOMER', STATUS CHAR(10) NOT NULL COMMENT 'ACCOUNT STATUS, ACTIVE OR CLOSED', ACCOUNT_DESC CHAR(50) COMMENT 'NAME OF CUSTOMER ACCOUNT', TAX_STATUS NUMBER(1) COMMENT '0, 1 OR 2 TAX STATUS OF THIS ACCOUNT', BATCH_ID NUMBER(5) NOT NULL COMMENT 'BATCH ID WHEN THIS RECORD WAS INSERTED', INSERTED_TS TIMESTAMP_LTZ NOT NULL COMMENT 'TIMESTAMP WHEN THIS RECORD WAS INSERTED' ) ;
-- CREATE SEQUENCE STATEMENT

CREATE SEQUENCE IF NOT EXISTS TPCDI_WH.PUBLIC.DIM_BROKER_SEQ   START WITH = 1   INCREMENT = 1   COMMENT = 'DATABASE SEQUENCE TO SOURCE THE SURROGATE KEY FOR BROKER.' ; 

-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_BROKER ( SK_BROKER_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR BROKER', BROKER_ID NUMBER(11) NOT NULL COMMENT 'NATURAL KEY FOR BROKER', MANAGER_ID NUMBER(11) COMMENT 'NATURAL KEY FOR MANAGERâ€™S HR RECORD', FIRST_NAME CHAR(50) NOT NULL COMMENT 'FIRST NAME', LAST_NAME CHAR(50) NOT NULL COMMENT 'LAST NAME', MIDDLE_INITIAL CHAR(1) COMMENT 'MIDDLE INITIAL', BRANCH CHAR(50) COMMENT 'FACILITY IN WHICH EMPLOYEE HAS OFFICE', OFFICE CHAR(50) COMMENT 'OFFICE NUMBER OR DESCRIPTION', PHONE CHAR(14) COMMENT 'EMPLOYEE PHONE NUMBER', BATCH_ID NUMBER(5) NOT NULL COMMENT 'BATCH ID WHEN THIS RECORD WAS INSERTED', INSERTED_TS TIMESTAMP_LTZ NOT NULL COMMENT 'TIMESTAMP WHEN THIS RECORD WAS INSERTED' ) ;
-- CREATE SEQUENCE STATEMENT

CREATE SEQUENCE IF NOT EXISTS TPCDI_WH.PUBLIC.DIM_COMPANY_SEQ   START WITH = 1   INCREMENT = 1   COMMENT = 'DATABASE SEQUENCE TO SOURCE THE SURROGATE KEY FOR COMPANY.' ; 

-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_COMPANY (   SK_COMPANY_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR COMPANYID' , COMPANY_ID NUMBER(11) NOT NULL COMMENT 'COMPANY IDENTIFIER (CIK NUMBER)' , STATUS CHAR(10) NOT NULL COMMENT 'COMPANY STATUS' , NAME CHAR(60) NOT NULL COMMENT 'COMPANY NAME' , INDUSTRY CHAR(50) NOT NULL COMMENT 'COMPANY''S INDUSTRY' , SP_RATING CHAR(4) COMMENT 'STANDARD & POOR COMPANY''S RATING' , IS_LOW_GRADE INT COMMENT 'TRUE IF THIS COMPANY IS LOW GRADE' , CEO CHAR(100) NOT NULL COMMENT 'CEO NAME' , ADDRESS_LINE1 CHAR(80) COMMENT 'ADDRESS LINE 1' , ADDRESS_LINE2 CHAR(80) COMMENT 'ADDRESS LINE 2' , POSTAL_CODE CHAR(12) NOT NULL COMMENT 'ZIP OR POSTAL CODE' , CITY CHAR(25) NOT NULL COMMENT 'CITY' , STATE_PROV CHAR(20) NOT NULL COMMENT 'STATE OR PROVINCE' , COUNTRY CHAR(24) COMMENT 'COUNTRY' , DESCRIPTION CHAR(150) NOT NULL COMMENT 'COMPANY DESCRIPTION' , FOUNDING_DATE DATE COMMENT 'DATE THE COMPANY WAS FOUNDED'  , BATCH_ID NUMBER(5) NOT NULL COMMENT 'BATCH ID WHEN THIS RECORD WAS INSERTED'  , INSERTED_TS TIMESTAMP_LTZ NOT NULL COMMENT 'TIMESTAMP WHEN THIS RECORD WAS INSERTED' ) ;
-- CREATE SEQUENCE STATEMENT

CREATE SEQUENCE IF NOT EXISTS TPCDI_WH.PUBLIC.DIM_CUSTOMER_SEQ   START WITH = 1   INCREMENT = 1   COMMENT = 'DATABASE SEQUENCE TO SOURCE THE SURROGATE KEY FOR CUSTOMER.' ;
 
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_CUSTOMER ( SK_CUSTOMER_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR CUSTOMERID', CUSTOMER_ID NUMBER(11) NOT NULL COMMENT 'CUSTOMER IDENTIFIER', TAX_ID CHAR(20) NOT NULL COMMENT 'CUSTOMER''S TAX IDENTIFIER', STATUS CHAR(10) NOT NULL COMMENT 'CUSTOMER STATUS TYPE', LAST_NAME CHAR(30) NOT NULL COMMENT 'CUSTOMER''S LAST NAME.', FIRST_NAME CHAR(30) NOT NULL COMMENT 'CUSTOMER''S FIRST NAME.', MIDDLE_INITIAL CHAR(1) COMMENT 'CUSTOMER''S MIDDLE NAME INITIAL', GENDER CHAR(1) COMMENT 'GENDER OF THE CUSTOMER', TIER NUMBER(1) COMMENT 'CUSTOMER TIER', DOB DATE NOT NULL COMMENT 'CUSTOMER''S DATE OF BIRTH.', ADDRESS_LINE_1 CHAR(80) NOT NULL COMMENT 'ADDRESS LINE 1', ADDRESS_LINE_2 CHAR(80) COMMENT 'ADDRESS LINE 2', POSTAL_CODE CHAR(12) NOT NULL COMMENT 'ZIP OR POSTAL CODE', CITY CHAR(25) NOT NULL COMMENT 'CITY', STATE_PROV CHAR(20) NOT NULL COMMENT 'STATE OR PROVINCE', COUNTRY CHAR(24) COMMENT 'COUNTRY', PHONE1 CHAR(30) COMMENT 'PHONE NUMBER 1', PHONE2 CHAR(30) COMMENT 'PHONE NUMBER 2', PHONE3 CHAR(30) COMMENT 'PHONE NUMBER 3', EMAIL1 CHAR(100) COMMENT 'EMAIL ADDRESS 1', EMAIL2 CHAR(100) COMMENT 'EMAIL ADDRESS 2', NATIONAL_TAX_RATE_DESC CHAR(50) COMMENT 'NATIONAL TAX RATE DESCRIPTION', NATIONAL_TAX_RATE NUMBER(6,5) COMMENT 'NATIONAL TAX RATE', LOCAL_TAX_RATE_DESC CHAR(50) COMMENT 'LOCAL TAX RATE DESCRIPTION', LOCAL_TAX_RATE NUMBER(6,5) COMMENT 'LOCAL TAX RATE', AGENCY_ID CHAR(30) COMMENT 'AGENCY IDENTIFIER', CREDIT_RATING NUMBER(5) COMMENT 'CREDIT RATING', NET_WORTH NUMBER(10) COMMENT 'NET WORTH', MARKETING_NAMEPLATE CHAR(100) COMMENT 'MARKETING NAMEPLATE', BATCH_ID NUMBER(5) NOT NULL COMMENT 'BATCH ID WHEN THIS RECORD WAS INSERTED', INSERTED_TS TIMESTAMP_LTZ NOT NULL COMMENT 'TIMESTAMP WHEN THIS RECORD WAS INSERTED' ) ;
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_DATE ( DATE_ID NUMBER NOT NULL COMMENT 'SURROGATE KEY FOR THE DATE', DATE_VALUE DATE NOT NULL COMMENT 'THE DATE STORED APPROPRIATELY FOR DOING COMPARISONS IN THE DATA WAREHOUSE', DATE_DESC VARCHAR(20) NOT NULL COMMENT 'THE DATE IN FULL WRITTEN FORM, E.G. JULY 7, 2004', CALENDAR_YEAR_ID NUMBER NOT NULL COMMENT 'YEAR NUMBER AS A NUMBER', CALENDAR_YEAR_DESC VARCHAR(20) NOT NULL COMMENT 'YEAR NUMBER AS TEXT', CALENDAR_QTR_ID NUMBER NOT NULL COMMENT 'QUARTER AS A NUMBER, E.G. 20042', CALENDAR_QTR_DESC VARCHAR(20) NOT NULL COMMENT 'QUARTER AS TEXT, E.G. 2004 Q2', CALENDAR_MONTH_ID NUMBER NOT NULL COMMENT 'MONTH AS A NUMBER, E.G. 20047', CALENDAR_MONTH_DESC VARCHAR(20) NOT NULL COMMENT 'MONTH AS TEXT, E.G. 2004 JULY', CALENDAR_WEEK_ID NUMBER NOT NULL COMMENT 'WEEK AS A NUMBER, E.G. 200428', CALENDAR_WEEK_DESC VARCHAR(20) NOT NULL COMMENT 'WEEK AS TEXT, E.G. 2004-W28', DAY_OF_WEEK_NUM NUMBER NOT NULL COMMENT 'DAY OF WEEK AS A NUMBER, E.G. 3', DAY_OF_WEEK_DESC VARCHAR(10) NOT NULL COMMENT 'DAY OF WEEK AS TEXT, E.G. WEDNESDAY', FISCAL_YEAR_ID NUMBER NOT NULL COMMENT 'FISCAL YEAR AS A NUMBER, E.G. 2005', FISCAL_YEAR_DESC VARCHAR(20) NOT NULL COMMENT 'FISCAL YEAR AS TEXT, E.G. 2005', FISCAL_QTR_ID NUMBER NOT NULL COMMENT 'FISCAL QUARTER AS A NUMBER, E.G. 20051', FISCAL_QTR_DESC VARCHAR(20) NOT NULL COMMENT 'FISCAL QUARTER AS TEXT, E.G. 2005 Q1', HOLIDAY_FLAG BOOLEAN COMMENT 'INDICATES HOLIDAYS' ) ;  
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_FINANCIAL ( SK_COMPANYID NUMBER(11) NOT NULL COMMENT 'COMPANY SK.', FI_YEAR NUMBER(4) NOT NULL COMMENT 'YEAR OF THE QUARTER END.', FI_QTR NUMBER(1) NOT NULL COMMENT 'QUARTER NUMBER THAT THE FINANCIAL INFORMATION IS FOR: VALID VALUES 1, 2, 3, 4.', FI_QTR_START_DATE DATE NOT NULL COMMENT 'START DATE OF QUARTER.', FI_REVENUE NUMBER(15,2) NOT NULL COMMENT 'REPORTED REVENUE FOR THE QUARTER.', FI_NET_EARN NUMBER(15,2) NOT NULL COMMENT 'NET EARNINGS REPORTED FOR THE QUARTER.', FI_BASIC_EPS NUMBER(10,2) NOT NULL COMMENT 'BASIC EARNINGS PER SHARE FOR THE QUARTER.', FI_DILUT_EPS NUMBER(10,2) NOT NULL COMMENT 'DILUTED EARNINGS PER SHARE FOR THE QUARTER.', FI_MARGIN NUMBER(10,2) NOT NULL COMMENT 'PROFIT DIVIDED BY REVENUES FOR THE QUARTER.', FI_INVENTORY NUMBER(15,2) NOT NULL COMMENT 'VALUE OF INVENTORY ON HAND AT THE END OF QUARTER.', FI_ASSETS NUMBER(15,2) NOT NULL COMMENT 'VALUE OF TOTAL ASSETS AT THE END OF THE QUARTER.', FI_LIABILITY NUMBER(15,2) NOT NULL COMMENT 'VALUE OF TOTAL LIABILITIES AT THE END OF THE QUARTER.', FI_OUT_BASIC NUMBER(12) NOT NULL COMMENT 'AVERAGE NUMBER OF SHARES OUTSTANDING (BASIC).', FI_OUT_DILUT NUMBER(12) NOT NULL COMMENT 'AVERAGE NUMBER OF SHARES OUTSTANDING (DILUTED).', INSERTED_TS TIMESTAMP_LTZ NOT NULL COMMENT 'TIMESTAMP WHEN THIS RECORD WAS INSERTED'  ) ;
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_INDUSTRY ( IN_ID CHAR(2) NOT NULL COMMENT 'INDUSTRY CODE', IN_NAME CHAR(50) NOT NULL COMMENT 'INDUSTRY DESCRIPTION' ) ;
-- CREATE SEQUENCE STATEMENT

CREATE SEQUENCE IF NOT EXISTS TPCDI_WH.PUBLIC.DIM_SECURITY_SEQ   START WITH = 1   INCREMENT = 1   COMMENT = 'DATABASE SEQUENCE TO SOURCE THE SURROGATE KEY FOR SECURITY.' ; 

-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_SECURITY ( SK_SECURITY_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR SYMBOL' , SYMBOL CHAR(15) NOT NULL COMMENT 'IDENTIFIES SECURITY ON TICKER' , ISSUE CHAR(6) NOT NULL COMMENT 'ISSUE TYPE' , STATUS CHAR(10) NOT NULL COMMENT 'STATUS TYPE' , NAME CHAR(70) NOT NULL COMMENT 'SECURITY NAME' , EXCHANGE_ID CHAR(6) NOT NULL COMMENT 'EXCHANGE THE SECURITY IS TRADED ON' , SK_COMPANY_ID NUMBER(11) NOT NULL COMMENT 'COMPANY ISSUING SECURITY' , SHARES_OUTSTANDING NUMBER(12) NOT NULL COMMENT 'SHARES OUTSTANDING' , FIRST_TRADE DATE NOT NULL COMMENT 'DATE OF FIRST TRADE' , FIRST_TRADE_ON_EXCHANGE DATE NOT NULL COMMENT 'DATE OF FIRST TRADE ON THIS EXCHANGE' , DIVIDEND NUMBER(10,2) NOT NULL COMMENT 'ANNUAL DIVIDEND PER SHARE'  , BATCH_ID NUMBER(5) NOT NULL COMMENT 'BATCH ID WHEN THIS RECORD WAS INSERTED' , INSERTED_TS TIMESTAMP_LTZ NOT NULL COMMENT 'TIMESTAMP WHEN THIS RECORD WAS INSERTED' ) ;
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_STATUS_TYPE ( ST_ID CHAR(4) NOT NULL COMMENT 'STATUS CODE', ST_NAME CHAR(10) NOT NULL COMMENT 'STATUS DESCRIPTION' ) ;
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_TAX_RATE ( TX_ID CHAR(4) NOT NULL COMMENT 'TAX RATE CODE', TX_NAME CHAR(50) NOT NULL COMMENT 'TAX RATE DESCRIPTION', TX_RATE NUMBER(6,5) NOT NULL COMMENT 'TAX RATE' ) ;
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_TIME ( TIME_ID NUMBER NOT NULL COMMENT 'SURROGATE KEY FOR THE TIME', TIME_VALUE TIME NOT NULL COMMENT 'THE TIME STORED APPROPRIATELY FOR DOING COMPARISONS IN THE DATA WAREHOUSE', HOUR_ID NUMBER NOT NULL COMMENT 'HOUR NUMBER AS A NUMBER, E.G. 01', HOUR_DESC VARCHAR(20) NOT NULL COMMENT 'HOUR NUMBER AS TEXT, E.G. 01', MINUTE_ID NUMBER NOT NULL COMMENT 'MINUTE AS A NUMBER, E.G. 23', MINUTE_DESC VARCHAR(20) NOT NULL COMMENT 'MINUTE AS TEXT, E.G. 01:23', SECOND_ID NUMBER NOT NULL COMMENT 'SECOND AS A NUMBER, E.G. 45', SECOND_DESC VARCHAR(20) NOT NULL COMMENT 'SECOND AS TEXT, E.G. 01:23:45', MARKET_HOURS_FLAG BOOLEAN COMMENT 'INDICATES A TIME DURING MARKET HOURS', OFFICE_HOURS_FLAG BOOLEAN COMMENT 'INDICATES A TIME DURING OFFICE HOURS' ) ;
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_TRADE ( TRADE_ID NUMBER(11) COMMENT 'NOT NULL TRADE IDENTIFIER', SK_BROKER_ID NUMBER(11) COMMENT 'SURROGATE KEY FOR BROKERID', SK_CREATE_DATE_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR DATE CREATED', SK_CREATE_TIME_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR TIME CREATED', SK_CLOSE_DATE_ID NUMBER(11) COMMENT 'SURROGATE KEY FOR DATE CLOSED', SK_CLOSE_TIME_ID NUMBER(11) COMMENT 'SURROGATE KEY FOR TIME CLOSED', STATUS CHAR(10) NOT NULL COMMENT 'TRADE STATUS', TYPE CHAR(12) NOT NULL COMMENT 'TRADE TYPE', CASH_FLAG INT NOT NULL COMMENT 'IS THIS TRADE A CASH (1) OR MARGIN (0) TRADE?', SK_SECURITY_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR SECURITYID', SK_COMPANY_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR COMPANYID', QUANTITY NUMBER(6,0) NOT NULL COMMENT 'QUANTITY OF SECURITIES TRADED.', BID_PRICE NUMBER(8,2) NOT NULL COMMENT 'THE REQUESTED UNIT PRICE.', SK_CUSTOMER_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR CUSTOMERID', SK_ACCOUNT_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR ACCOUNTID', EXECUTED_BY CHAR(64) NOT NULL COMMENT 'NAME OF PERSON EXECUTING THE TRADE.', TRADE_PRICE NUMBER(8,2) COMMENT 'UNIT PRICE AT WHICH THE SECURITY WAS TRADED.', FEE NUMBER(10,2) COMMENT 'FEE CHARGED FOR PLACING THIS TRADE REQUEST', COMMISSION NUMBER(10,2) COMMENT 'COMMISSION EARNED ON THIS TRADE', TAX NUMBER(10,2) COMMENT 'AMOUNT OF TAX DUE ON THIS TRADE', BATCH_ID NUMBER(5) NOT NULL COMMENT 'BATCH ID WHEN THIS RECORD WAS INSERTED', LAST_UPDATED_TS TIMESTAMP_LTZ NOT NULL COMMENT 'TIMESTAMP WHEN THIS RECORD WAS LAST UPDATED' ) ;
-- CREATE TABLE STATEMENT COMMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.DIM_TRADE_TYPE  ( TT_ID CHAR(3) NOT NULL COMMENT 'TRADE TYPE CODE', TT_NAME CHAR(12) NOT NULL COMMENT 'TRADE TYPE DESCRIPTION', TT_IS_SELL INT NOT NULL COMMENT 'FLAG INDICATING A SALE', TT_IS_MRKT INT NOT NULL COMMENT 'FLAG INDICATING A MARKET ORDER' ) ;
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.FACT_CASH_BALANCES ( SK_CUSTOMER_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR CUSTOMERID', SK_ACCOUNT_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR ACCOUNTID', SK_DATE_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR THE DATE', CASH NUMBER(15,2) NOT NULL COMMENT 'CASH BALANCE FOR THE ACCOUNT AFTER APPLYING CHANGES FOR THIS DAY', BATCH_ID NUMBER(5) NOT NULL COMMENT 'BATCH ID WHEN THIS RECORD WAS INSERTED' ) ;
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.FACT_HOLDINGS ( TRADE_ID NUMBER(11) COMMENT 'KEY FOR ORIGNIAL TRADE INDENTIFIER', CURRENT_TRADE_ID NUMBER(11) COMMENT 'KEY FOR THE CURRENT TRADE', SK_CUSTOMER_ID NUMBER(11) COMMENT 'SURROGATE KEY FOR CUSTOMER IDENTIFIER', SK_ACCOUNT_ID NUMBER(11) COMMENT 'SURROGATE KEY FOR ACCOUNT IDENTIFIER', SK_SECURITY_ID NUMBER(11) COMMENT 'SURROGATE KEY FOR SECURITY IDENTIFIER', SK_COMPANY_ID NUMBER(11) COMMENT 'SURROGATE KEY FOR COMPANY IDENTIFIER', SK_DATE_ID NUMBER(11) COMMENT 'SURROGATE KEY FOR THE DATE ASSOCIATED WITH THE CURRENT TRADE', SK_TIME_ID NUMBER(11) COMMENT 'SURROGATE KEY FOR THE TIME ASSOCIATED WITH THE CURRENT TRADE', CURRENT_PRICE NUMBER(8,2) COMMENT 'UNIT PRICE OF THIS SECURITY FOR THE CURRENT TRADE', CURRENT_HOLDING NUMBER(6) COMMENT 'QUANTITY OF A SECURITY HELD AFTER THE CURRENT TRADE. THE VALUE CAN BE A POSITIVE OR NEGATIVE INTEGER', BATCH_ID NUMBER(5) COMMENT 'BATCH ID WHEN THIS RECORD WAS INSERTED' ) ;
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.FACT_MARKET_HISTORY ( SK_SECURITY_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR SECURITYID', SK_COMPANY_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR COMPANYID', SK_DATE_ID NUMBER(11) NOT NULL COMMENT 'SURROGATE KEY FOR THE DATE', PE_RATIO NUMBER(10,2) COMMENT 'PRICE TO EARNINGS PER SHARE RATIO', YIELD NUMBER(5,2) NOT NULL COMMENT 'DIVIDEND TO PRICE RATIO, AS A PERCENTAGE', FIFTY_TWO_WEEK_HIGH NUMBER(8,2) NOT NULL COMMENT 'SECURITY HIGHEST PRICE IN LAST 52 WEEKS FROM THIS DAY', SK_FIFTY_TWO_WEEK_HIGH_DATE NUMBER(11) NOT NULL COMMENT 'EARLIEST DATE ON WHICH THE 52 WEEK HIGH PRICE WAS SET', FIFTY_TWO_WEEK_LOW NUMBER(8,2) NOT NULL COMMENT 'SECURITY LOWEST PRICE IN LAST 52 WEEKS FROM THIS DAY', SK_FIFTY_TWO_WEEK_LOW_DATE NUMBER(11) NOT NULL COMMENT 'EARLIEST DATE ON WHICH THE 52 WEEK LOW PRICE WAS SET', CLOSE_PRICE NUMBER(8,2) NOT NULL COMMENT 'SECURITY CLOSING PRICE ON THIS DAY', DAY_HIGH NUMBER(8,2) NOT NULL COMMENT 'HIGHEST PRICE FOR THE SECURITY ON THIS DAY', DAY_LOW NUMBER(8,2) NOT NULL COMMENT 'LOWEST PRICE FOR THE SECURITY ON THIS DAY', VOLUME NUMBER(12) NOT NULL COMMENT 'TRADING VOLUME OF THE SECURITY ON THIS DAY', BATCH_ID NUMBER(5) NOT NULL COMMENT 'BATCH ID WHEN THIS RECORD WAS INSERTED' ) ;
-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.FACT_PROSPECT ( AGENCY_ID CHAR(30) NOT NULL COMMENT 'UNIQUE IDENTIFIER FROM AGENCY', SK_RECORD_DATE_ID NUMBER NOT NULL COMMENT 'LAST DATE THIS PROSPECT APPEARED IN INPUT', SK_UPDATE_DATE_ID NUMBER NOT NULL COMMENT 'LATEST CHANGE DATE FOR THIS PROSPECT', BATCH_ID NUMBER(5) NOT NULL COMMENT 'BATCH ID WHEN THIS RECORD WAS LAST MODIFIED', IS_CUSTOMER BOOLEAN NOT NULL COMMENT 'TRUE IF THIS PERSON IS ALSO IN DIMCUSTOMER, ELSE FALSE', LAST_NAME CHAR(30) NOT NULL COMMENT 'LAST NAME', FIRST_NAME CHAR(30) NOT NULL COMMENT 'FIRST NAME', MIDDLE_INITIAL CHAR(1)  COMMENT 'MIDDLE INITIAL', GENDER CHAR(1)  COMMENT 'M/F/U', ADDRESS_LINE1 CHAR(80) COMMENT 'POSTAL ADDRESS', ADDRESS_LINE2 CHAR(80) COMMENT 'POSTAL ADDRESS', POSTAL_CODE CHAR(12) COMMENT 'POSTAL CODE', CITY CHAR(25) NOT NULL COMMENT 'CITY', STATE CHAR(20) NOT NULL COMMENT 'STATE OR PROVINCE', COUNTRY CHAR(24) COMMENT 'POSTAL COUNTRY', PHONE CHAR(30) COMMENT 'TELEPHONE NUMBER', INCOME NUMBER(9) COMMENT 'ANNUAL INCOME', NUMBER_CARS NUMBER(2) COMMENT 'CARS OWNED', NUMBER_CHILDREN NUMBER(2) COMMENT 'DEPENDENT CHILDREN', MARITAL_STATUS CHAR(1) COMMENT 'S/M/D/W/U', AGE NUMBER(3) COMMENT 'CURRENT AGE', CREDIT_RATING NUMBER(4) COMMENT 'NUMERIC RATING', OWN_OR_RENT_FLAG CHAR(1) COMMENT 'O/R/U', EMPLOYER CHAR(30) COMMENT 'NAME OF EMPLOYER', NUMBER_CREDIT_CARDS NUMBER(2) COMMENT 'CREDIT CARDS', NET_WORTH NUMBER(12) COMMENT 'ESTIMATED TOTAL NET WORTH', MARKETING_NAMEPLATE CHAR(100) COMMENT 'FOR MARKETING PURPOSES' ) ;

-- CREATE TABLE STATEMENT

CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.FACT_WATCHES ( SK_CUSTOMER_ID NUMBER(11) NOT NULL COMMENT 'CUSTOMER ASSOCIATED WITH WATCH LIST', SK_SECURITY_ID NUMBER(11) NOT NULL COMMENT 'SECURITY LISTED ON WATCH LIST', SK_DATE_ID_DATE_PLACED NUMBER(11) NOT NULL COMMENT 'DATE THE WATCH LIST ITEM WAS ADDED', SK_DATE_ID_DATE_REMOVED NUMBER(11) COMMENT 'DATE THE WATCH LIST ITEM WAS REMOVED', BATCH_ID NUMBER(5) NOT NULL COMMENT 'BATCH ID WHEN THIS RECORD WAS INSERTED' ) ;
CREATE OR REPLACE TABLE TPCDI_WH.PUBLIC.LOAD_SNAPSHOT ( DATABASE VARCHAR NOT NULL COMMENT 'DATABASE NAME', SNAPSHOT_TIME TIMESTAMP_LTZ NOT NULL COMMENT 'THE TIMESTAMP THE SNAPSHOT WAS TAKEN', ROW_COUNT NUMBER NOT NULL COMMENT 'THE SUM OF ROWS IN ALL TABLES IN THE CORRESPONDING DATABASE' ) ;
